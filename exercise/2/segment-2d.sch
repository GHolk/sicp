
(define (make-point x y)
  (cons x y))
(define (x-point p)
  (car p))
(define (y-point p)
  (cdr p))

(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))

(define (make-segment start end)
  (cons start end))
(define (start-segment segment)
  (car segment))
(define (end-segment segment)
  (cdr segment))
(define (length-segment s)
  (let* ((start (start-segment s))
         (end (end-segment s)))
    (sqrt (+ (square (- (x-point start)
                        (x-point end)))
             (square (- (y-point start)
                        (y-point end)))))))
(define (midpoint-segment s)
  (define (average x y)
    (/ (+ x y) 2))
  (define (average-point p1 p2)
    (make-point (average (x-point p1)
                         (x-point p2))
                (average (y-point p1)
                         (y-point p2))))
  (let ((start (start-segment s))
        (end (end-segment s)))
    (average-point start end)))

(define (make-rectangle segment height)
  (cons segment height))
(define (side rect)
  (car rect))
(define (height rect)
  (cdr rect))
(define (width rect)
  (length-segment (side rect)))

(define (perimeter rect)
  (* 2 (+ (width rect)
          (height rect))))
(define (area rect)
  (* (width rect)
     (height rect)))
